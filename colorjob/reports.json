{
  "stats": {
    "suites": 1,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2024-10-12T19:52:35.772Z",
    "end": "2024-10-12T19:53:12.610Z",
    "duration": 36838,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "d492603f-9f11-4eea-a91f-7d3a9a28de0d",
      "title": "",
      "fullFile": "C:\\terenbro\\mailstone1\\test\\Roles tests\\CACanCreateEditRemoveTask.test.js",
      "file": "\\test\\Roles tests\\CACanCreateEditRemoveTask.test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6fbe2b00-69a8-4d4f-8a9d-a6f1b9c11763",
          "title": "Company admin role @Se7b2355c",
          "fullFile": "C:\\terenbro\\mailstone1\\test\\Roles tests\\CACanCreateEditRemoveTask.test.js",
          "file": "\\test\\Roles tests\\CACanCreateEditRemoveTask.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Company admin role @Se7b2355c\"",
              "fullTitle": "Company admin role @Se7b2355c \"before each\" hook in \"Company admin role @Se7b2355c\"",
              "timedOut": false,
              "duration": 1174,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driverChrome = await createWebdriverChrome();",
              "err": {},
              "uuid": "764c7af4-fad5-44ab-9c5a-1e168c01e124",
              "parentUUID": "6fbe2b00-69a8-4d4f-8a9d-a6f1b9c11763",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Company admin role @Se7b2355c\"",
              "fullTitle": "Company admin role @Se7b2355c \"after each\" hook in \"Company admin role @Se7b2355c\"",
              "timedOut": false,
              "duration": 114,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (driverChrome) {\n  await driverChrome.quit();\n}",
              "err": {},
              "uuid": "b035d2d4-9bce-4cb3-a88f-7d76cb8f251c",
              "parentUUID": "6fbe2b00-69a8-4d4f-8a9d-a6f1b9c11763",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "CA can create tasks @T98285107",
              "fullTitle": "Company admin role @Se7b2355c CA can create tasks @T98285107",
              "timedOut": false,
              "duration": 8947,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await lambdaParameters('create new task by employee', driverChrome);\n// time and site or lochalhost there tests are going\nconsole.log(Date().toLocaleLowerCase(), 'date', config.urlLoginPage);\nconst logginPageTest = new LoginPage(driverChrome, config.urlLoginPage);\nconst createTaskByCA = new CreateTaskByEmployee(driverChrome);\nawait logginPageTest.userLogIn(\n  config.emailCA,\n  config.passwordCA,\n  config.mainCompanyPage\n);\ntry {\n  await createTaskByCA.goToCreateTasksForm();\n  await createTaskByCA.fillCreateTask(\n    config.newTaskName,\n    config.taskDescription,\n    config.taskDate,\n    config.userCAName\n  );\n  await lambdaParameters('passed', driverChrome);\n} catch (error) {\n  await makeScreenshot(driverChrome, 'task_create_by_CA');\n  await lambdaParameters('failed', driverChrome);\n  throw error;\n}",
              "err": {},
              "uuid": "82c0b80c-4846-470f-aa05-6ff31c47710d",
              "parentUUID": "6fbe2b00-69a8-4d4f-8a9d-a6f1b9c11763",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "CA can edit tasks @T9d832535",
              "fullTitle": "Company admin role @Se7b2355c CA can edit tasks @T9d832535",
              "timedOut": false,
              "duration": 8972,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await lambdaParameters('update task by employee', driverChrome);\n// time and site or lochalhost there tests are going\nconsole.log(Date().toLocaleLowerCase(), 'date', config.urlLoginPage);\nconst logginPageTest = new LoginPage(driverChrome, config.urlLoginPage);\nconst CAUpdateTask = new EmployeeUpdateTask(driverChrome);\nawait logginPageTest.userLogIn(\n  config.emailCA,\n  config.passwordCA,\n  config.mainCompanyPage\n);\ntry {\n  await CAUpdateTask.goToCreateTasksForm();\n  await CAUpdateTask.editTask(config.newTaskName, config.newTaskNameForUpdate);\n  await lambdaParameters('passed', driverChrome);\n} catch (error) {\n  await makeScreenshot(driverChrome, 'task_update_by_CA');\n  await lambdaParameters('failed', driverChrome);\n  throw error;\n}",
              "err": {},
              "uuid": "93e98eaa-4399-4dc1-ab65-5aeb9dcf35de",
              "parentUUID": "6fbe2b00-69a8-4d4f-8a9d-a6f1b9c11763",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "CA can delete tasks",
              "fullTitle": "Company admin role @Se7b2355c CA can delete tasks",
              "timedOut": false,
              "duration": 15429,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await lambdaParameters('CA can delete tasks', driverChrome);\nconsole.log(Date().toLocaleLowerCase(), 'date', config.urlLoginPage);\nconst logginPageTest = new LoginPage(driverChrome, config.urlLoginPage);\nconst removeTaskByCA = new RemoveTaskByEmployee(driverChrome);\nawait logginPageTest.userLogIn(\n  config.emailCA,\n  config.passwordCA,\n  config.mainCompanyPage\n);\ntry {\n  await removeTaskByCA.goToTasksList();\n  await removeTaskByCA.taskRemove(config.newTaskNameForUpdate);\n  await lambdaParameters('passed', driverChrome);\n} catch (error) {\n  await makeScreenshot(driverChrome, 'task_remove_by_CA');\n  await lambdaParameters('failed', driverChrome);\n  throw error;\n}",
              "err": {},
              "uuid": "24e5fc2f-69c5-4e74-8e43-664445d88d7d",
              "parentUUID": "6fbe2b00-69a8-4d4f-8a9d-a6f1b9c11763",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "82c0b80c-4846-470f-aa05-6ff31c47710d",
            "93e98eaa-4399-4dc1-ab65-5aeb9dcf35de",
            "24e5fc2f-69c5-4e74-8e43-664445d88d7d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 33348,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.7.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "reports",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "colorjob",
        "reportFilename": "reports"
      },
      "version": "6.2.0"
    }
  }
}