{
  "stats": {
    "suites": 1,
    "tests": 5,
    "passes": 5,
    "pending": 0,
    "failures": 0,
    "start": "2024-10-11T09:18:36.071Z",
    "end": "2024-10-11T09:20:06.891Z",
    "duration": 90820,
    "testsRegistered": 5,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "459a6635-7ee2-45e0-95af-94c110677c69",
      "title": "",
      "fullFile": "C:\\terenbro\\mailstone1\\test\\Tasks tests\\attachFileToTask.test.js",
      "file": "\\test\\Tasks tests\\attachFileToTask.test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e0c7c763-5dd8-4ddd-a50e-2f9c22d9448f",
          "title": "Tasks tests @S26f6875e",
          "fullFile": "C:\\terenbro\\mailstone1\\test\\Tasks tests\\attachFileToTask.test.js",
          "file": "\\test\\Tasks tests\\attachFileToTask.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Tasks tests @S26f6875e\"",
              "fullTitle": "Tasks tests @S26f6875e \"before each\" hook in \"Tasks tests @S26f6875e\"",
              "timedOut": false,
              "duration": 1200,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driverChrome = await createWebdriverChrome();",
              "err": {},
              "uuid": "29d94a68-14d0-4ad0-9aad-d88a387458c9",
              "parentUUID": "e0c7c763-5dd8-4ddd-a50e-2f9c22d9448f",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Tasks tests @S26f6875e\"",
              "fullTitle": "Tasks tests @S26f6875e \"after each\" hook in \"Tasks tests @S26f6875e\"",
              "timedOut": false,
              "duration": 150,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (driverChrome) {\n  await driverChrome.quit();\n}",
              "err": {},
              "uuid": "ff113528-8983-4126-b44f-7902b89c1fd2",
              "parentUUID": "e0c7c763-5dd8-4ddd-a50e-2f9c22d9448f",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "create new task @Tcdda7369",
              "fullTitle": "Tasks tests @S26f6875e create new task @Tcdda7369",
              "timedOut": false,
              "duration": 16476,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await lambdaParameters('create new task', driverChrome);\n// time and site or lochalhost there tests are going\nconsole.log(Date().toLocaleLowerCase(), 'date', config.urlLoginPage);\nconst logginPageTest = new LoginPage(driverChrome, config.urlLoginPage);\nconst createTask = new CreateTask(driverChrome);\nawait logginPageTest.userLogIn(\n  config.email,\n  config.password,\n  config.urlhomePageForCheck\n);\ntry {\n  await createTask.goToCreateTasksForm(config.projectNameMain);\n  await createTask.fillCreateTask(\n    newTaskName,\n    config.taskDescription,\n    config.taskDate\n  );\n  await createTask.checkTaskCreation(newTaskName);\n  await lambdaParameters('passed', driverChrome);\n} catch (error) {\n  await makeScreenshot(driverChrome, 'task_create');\n  await lambdaParameters('failed', driverChrome);\n  throw error;\n}",
              "err": {},
              "uuid": "8a997d0f-be9b-407c-beb0-624c114d6ef7",
              "parentUUID": "e0c7c763-5dd8-4ddd-a50e-2f9c22d9448f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add media attachment to the task edit @T9f8ae49e",
              "fullTitle": "Tasks tests @S26f6875e Add media attachment to the task edit @T9f8ae49e",
              "timedOut": false,
              "duration": 20922,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await lambdaParameters('Add media attachment to the task edit @T9f8ae49e', driverChrome);\n// time and site or lochalhost there tests are going\nconsole.log(Date().toLocaleLowerCase(), 'date', config.urlLoginPage);\nconst logginPageTest = new LoginPage(driverChrome, config.urlLoginPage);\nconst updateTaskDetail = new UpdateTaskDetail(driverChrome);\nconst goToTasks = new SearchingTaskByName(driverChrome);\nawait logginPageTest.userLogIn(\n  config.email,\n  config.password,\n  config.urlhomePageForCheck\n);\nawait goToTasks.goToTasksList(config.projectNameMain);\ntry {\n    await updateTaskDetail.findAllTasksInProject();\n    await updateTaskDetail.addAttachment(newTaskName, config.attachmentFileVideo);\n    await updateTaskDetail.checkAttachment(\n        newTaskName,\n        config.attachmentFileVideo\n    );\n  \n    await lambdaParameters('passed', driverChrome);\n} catch (error) {\n    await lambdaParameters('failed', driverChrome);\n    await makeScreenshot(driverChrome, 'task_attachment');\n    throw error;\n}",
              "err": {},
              "uuid": "8170d6d0-f858-4e16-bcf3-b6fe04a78e27",
              "parentUUID": "e0c7c763-5dd8-4ddd-a50e-2f9c22d9448f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add document attachment to the task @Ta8fb3301",
              "fullTitle": "Tasks tests @S26f6875e Add document attachment to the task @Ta8fb3301",
              "timedOut": false,
              "duration": 17595,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await lambdaParameters('Add document attachment to the task @Ta8fb3301', driverChrome);\n// time and site or lochalhost there tests are going\nconsole.log(Date().toLocaleLowerCase(), 'date', config.urlLoginPage);\nconst logginPageTest = new LoginPage(driverChrome, config.urlLoginPage);\nconst updateTaskDetail = new UpdateTaskDetail(driverChrome);\nconst goToTasks = new SearchingTaskByName(driverChrome);\nawait logginPageTest.userLogIn(\n  config.email,\n  config.password,\n  config.urlhomePageForCheck\n);\nawait goToTasks.goToTasksList(config.projectNameMain);\ntry {\n    await updateTaskDetail.findAllTasksInProject();\n    await updateTaskDetail.addAttachment(newTaskName, config.attachmentFileDoc);\n    await updateTaskDetail.checkAttachment(\n        newTaskName,\n        config.attachmentFileDoc\n    );\n  \n    await lambdaParameters('passed', driverChrome);\n} catch (error) {\n    await lambdaParameters('failed', driverChrome);\n    await makeScreenshot(driverChrome, 'task_attachment');\n    throw error;\n}",
              "err": {},
              "uuid": "9b816dbd-6ec4-422f-80c2-34610ae48edf",
              "parentUUID": "e0c7c763-5dd8-4ddd-a50e-2f9c22d9448f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add other attachment to the task (.zip/.rar, .exe) @T1231ae22",
              "fullTitle": "Tasks tests @S26f6875e Add other attachment to the task (.zip/.rar, .exe) @T1231ae22",
              "timedOut": false,
              "duration": 17372,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await lambdaParameters('Add other attachment to the task (.zip/.rar, .exe) @T1231ae22', driverChrome);\n// time and site or lochalhost there tests are going\nconsole.log(Date().toLocaleLowerCase(), 'date', config.urlLoginPage);\nconst logginPageTest = new LoginPage(driverChrome, config.urlLoginPage);\nconst updateTaskDetail = new UpdateTaskDetail(driverChrome);\nconst goToTasks = new SearchingTaskByName(driverChrome);\nawait logginPageTest.userLogIn(\n  config.email,\n  config.password,\n  config.urlhomePageForCheck\n);\nawait goToTasks.goToTasksList(config.projectNameMain);\ntry {\n    await updateTaskDetail.findAllTasksInProject();\n    await updateTaskDetail.addAttachment(newTaskName, config.attachmentFileZip);\n    await updateTaskDetail.checkAttachment(\n        newTaskName,\n        config.attachmentFileZip\n    );\n  \n    await lambdaParameters('passed', driverChrome);\n} catch (error) {\n    await lambdaParameters('failed', driverChrome);\n    await makeScreenshot(driverChrome, 'task_attachment');\n    throw error;\n}",
              "err": {},
              "uuid": "be63077f-6665-4af0-bcc6-a4e33beb56ca",
              "parentUUID": "e0c7c763-5dd8-4ddd-a50e-2f9c22d9448f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "remove task @T331e8497",
              "fullTitle": "Tasks tests @S26f6875e remove task @T331e8497",
              "timedOut": false,
              "duration": 11885,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await lambdaParameters('remove task', driverChrome);\n// time and site or lochalhost there tests are going\nconsole.log(Date().toLocaleLowerCase(), 'date', config.urlLoginPage);\nconst logginPageTest = new LoginPage(driverChrome, config.urlLoginPage);\nconst removeTask = new RemoveTask(driverChrome);\nawait logginPageTest.userLogIn(\n  config.email,\n  config.password,\n  config.urlhomePageForCheck\n);\ntry {\n  await removeTask.goToTasksList(config.projectNameMain);\n  await removeTask.taskRemove(newTaskName);\n  await lambdaParameters('passed', driverChrome);\n} catch (error) {\n  await makeScreenshot(driverChrome, 'task_remove');\n  await lambdaParameters('failed', driverChrome);\n  throw error;\n}",
              "err": {},
              "uuid": "2cf59354-3bbc-43aa-933b-8c700f9f2226",
              "parentUUID": "e0c7c763-5dd8-4ddd-a50e-2f9c22d9448f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8a997d0f-be9b-407c-beb0-624c114d6ef7",
            "8170d6d0-f858-4e16-bcf3-b6fe04a78e27",
            "9b816dbd-6ec4-422f-80c2-34610ae48edf",
            "be63077f-6665-4af0-bcc6-a4e33beb56ca",
            "2cf59354-3bbc-43aa-933b-8c700f9f2226"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 84250,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.7.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "reports",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "colorjob",
        "reportFilename": "reports"
      },
      "version": "6.2.0"
    }
  }
}