{
  "stats": {
    "suites": 1,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2024-10-17T14:37:19.140Z",
    "end": "2024-10-17T14:38:02.060Z",
    "duration": 42920,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "e5e72d1b-68a6-4ff2-8790-341ada526d3d",
      "title": "",
      "fullFile": "C:\\terenbro\\mailstone1\\test\\Company management tests\\createEditRemoveCompany.test.js",
      "file": "\\test\\Company management tests\\createEditRemoveCompany.test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7b8394c4-93fd-4de5-96ac-2d032f6437fa",
          "title": "Company management tests @Sb36e9099",
          "fullFile": "C:\\terenbro\\mailstone1\\test\\Company management tests\\createEditRemoveCompany.test.js",
          "file": "\\test\\Company management tests\\createEditRemoveCompany.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Company management tests @Sb36e9099\"",
              "fullTitle": "Company management tests @Sb36e9099 \"before each\" hook in \"Company management tests @Sb36e9099\"",
              "timedOut": false,
              "duration": 1096,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driverChrome = await createWebdriverChrome();",
              "err": {},
              "uuid": "04d7a5cc-d42f-4d7c-bc6b-b7d1b19b0697",
              "parentUUID": "7b8394c4-93fd-4de5-96ac-2d032f6437fa",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Company management tests @Sb36e9099\"",
              "fullTitle": "Company management tests @Sb36e9099 \"after each\" hook in \"Company management tests @Sb36e9099\"",
              "timedOut": false,
              "duration": 175,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (driverChrome) {\n  await driverChrome.quit();\n}",
              "err": {},
              "uuid": "09566640-83e8-4ec9-aa2b-c27426c52bb6",
              "parentUUID": "7b8394c4-93fd-4de5-96ac-2d032f6437fa",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "create new company @T39b080c5",
              "fullTitle": "Company management tests @Sb36e9099 create new company @T39b080c5",
              "timedOut": false,
              "duration": 18815,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await lambdaParameters('create new company', driverChrome);\n// time and site or lochalhost there tests are going\nconsole.log(Date().toLocaleLowerCase(), 'date', config.urlLoginPage);\nconst logginPageTest = new LoginPage(driverChrome, config.urlLoginPage);\nconst createCompany = new CreateCompany(driverChrome);\nconst editCompany = new EditCompany(driverChrome);\nawait logginPageTest.userLogIn(\n  config.email,\n  config.password,\n  config.urlhomePageForCheck\n);\ntry {\n  await createCompany.goToCreateCompanyForm();\n  await createCompany.fillCreateCompany(\n    newConpanyName,\n    config.newCompanyStreet,\n    config.newCompanyApp,\n    config.newCompanyState,\n    config.newCompanyCity,\n    config.newCompanyZip,\n    config.newCompanyPhone,\n    config.newCompanyEmail,\n    config.newCompanyPlan,\n    config.newCompanyType\n  );\n  await createCompany.checkCreationOfNewCompany();\n  await driverChrome.sleep(500);\n  // await editCompany.clickElement(config.locatorCompanyListCss, false, 0, 1000);\n  await editCompany.findCompany(newConpanyName, config.companiesPage);\n  await editCompany.checkCompanyPlane(config.newCompanyPlan, 10000);\n  await lambdaParameters('passed', driverChrome);\n} catch (error) {\n  await makeScreenshot(driverChrome, 'company_create');\n  await lambdaParameters('failed', driverChrome);\n  throw error;\n}",
              "err": {},
              "uuid": "eb7f36b8-be95-44c0-9631-1f83f9e61a50",
              "parentUUID": "7b8394c4-93fd-4de5-96ac-2d032f6437fa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "edit new company @Tf5a8e860",
              "fullTitle": "Company management tests @Sb36e9099 edit new company @Tf5a8e860",
              "timedOut": false,
              "duration": 10141,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await lambdaParameters('edit new company', driverChrome);\n// time and site or lochalhost there tests are going\nconsole.log(Date().toLocaleLowerCase(), 'date', config.urlLoginPage);\nconst logginPageTest = new LoginPage(driverChrome, config.urlLoginPage);\nconst editCompany = new EditCompany(driverChrome);\nawait logginPageTest.userLogIn(\n  config.email,\n  config.password,\n  config.urlhomePageForCheck\n);\ntry {\n  await editCompany.goToCompanyList();\n  await editCompany.findCompany(newConpanyName, config.companiesPage);\n  await editCompany.editCompany(editCompanyName);\n  await lambdaParameters('passed', driverChrome);\n} catch (error) {\n  await makeScreenshot(driverChrome, 'company_edit');\n  await lambdaParameters('failed', driverChrome);\n  throw error;\n}",
              "err": {},
              "uuid": "01d3eddc-912a-4f3f-be3f-6d3c41652c8a",
              "parentUUID": "7b8394c4-93fd-4de5-96ac-2d032f6437fa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "remove company @T9b9142ee",
              "fullTitle": "Company management tests @Sb36e9099 remove company @T9b9142ee",
              "timedOut": false,
              "duration": 10288,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await lambdaParameters('remove company', driverChrome);\n// time and site or lochalhost there tests are going\nconsole.log(Date().toLocaleLowerCase(), 'date', config.urlLoginPage);\nconst logginPageTest = new LoginPage(driverChrome, config.urlLoginPage);\nconst removeCompany = new RemoveCompany(driverChrome);\ntry {\n  await logginPageTest.userLogIn(\n    config.email,\n    config.password,\n    config.urlhomePageForCheck\n  );\n  await removeCompany.goToCompanyList();\n  await removeCompany.findCompany(editCompanyName, config.companiesPage);\n  await removeCompany.removefindCompany(editCompanyName);\n  await lambdaParameters('passed', driverChrome);\n} catch (error) {\n  await lambdaParameters('failed', driverChrome);\n  await makeScreenshot(driverChrome, 'company_remove');\n  throw error;\n}",
              "err": {},
              "uuid": "e5bd062c-3dc1-4e80-ae9f-6c60389760c2",
              "parentUUID": "7b8394c4-93fd-4de5-96ac-2d032f6437fa",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "eb7f36b8-be95-44c0-9631-1f83f9e61a50",
            "01d3eddc-912a-4f3f-be3f-6d3c41652c8a",
            "e5bd062c-3dc1-4e80-ae9f-6c60389760c2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 39244,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.7.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "reports",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "colorjob",
        "reportFilename": "reports"
      },
      "version": "6.2.0"
    }
  }
}