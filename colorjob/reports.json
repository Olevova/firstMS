{
  "stats": {
    "suites": 1,
    "tests": 5,
    "passes": 5,
    "pending": 0,
    "failures": 0,
    "start": "2024-10-11T08:39:52.619Z",
    "end": "2024-10-11T08:41:20.004Z",
    "duration": 87385,
    "testsRegistered": 5,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "64dec59b-be32-4d75-96dc-880fc5af7ad9",
      "title": "",
      "fullFile": "C:\\terenbro\\mailstone1\\test\\Tasks tests\\attachFileToTask.test.js",
      "file": "\\test\\Tasks tests\\attachFileToTask.test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c3d6a933-f8ed-499a-b67a-3a7602cf8f5d",
          "title": "Tasks tests @S26f6875e",
          "fullFile": "C:\\terenbro\\mailstone1\\test\\Tasks tests\\attachFileToTask.test.js",
          "file": "\\test\\Tasks tests\\attachFileToTask.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Tasks tests @S26f6875e\"",
              "fullTitle": "Tasks tests @S26f6875e \"before each\" hook in \"Tasks tests @S26f6875e\"",
              "timedOut": false,
              "duration": 1195,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driverChrome = await createWebdriverChrome();",
              "err": {},
              "uuid": "fb59077b-6c44-435e-ad09-e8e4081d3256",
              "parentUUID": "c3d6a933-f8ed-499a-b67a-3a7602cf8f5d",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Tasks tests @S26f6875e\"",
              "fullTitle": "Tasks tests @S26f6875e \"after each\" hook in \"Tasks tests @S26f6875e\"",
              "timedOut": false,
              "duration": 125,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (driverChrome) {\n  await driverChrome.quit();\n}",
              "err": {},
              "uuid": "e270514d-c65a-45d7-8fe7-612efd93c928",
              "parentUUID": "c3d6a933-f8ed-499a-b67a-3a7602cf8f5d",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "create new task @Tcdda7369",
              "fullTitle": "Tasks tests @S26f6875e create new task @Tcdda7369",
              "timedOut": false,
              "duration": 16418,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await lambdaParameters('create new task', driverChrome);\n// time and site or lochalhost there tests are going\nconsole.log(Date().toLocaleLowerCase(), 'date', config.urlLoginPage);\nconst logginPageTest = new LoginPage(driverChrome, config.urlLoginPage);\nconst createTask = new CreateTask(driverChrome);\nawait logginPageTest.userLogIn(\n  config.email,\n  config.password,\n  config.urlhomePageForCheck\n);\ntry {\n  await createTask.goToCreateTasksForm(config.projectNameMain);\n  await createTask.fillCreateTask(\n    newTaskName,\n    config.taskDescription,\n    config.taskDate\n  );\n  await createTask.checkTaskCreation(newTaskName);\n  await lambdaParameters('passed', driverChrome);\n} catch (error) {\n  await makeScreenshot(driverChrome, 'task_create');\n  await lambdaParameters('failed', driverChrome);\n  throw error;\n}",
              "err": {},
              "uuid": "5ce974d0-1bae-4f57-aca5-e0421433b17a",
              "parentUUID": "c3d6a933-f8ed-499a-b67a-3a7602cf8f5d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add media attachment to the task edit @T9f8ae49e",
              "fullTitle": "Tasks tests @S26f6875e Add media attachment to the task edit @T9f8ae49e",
              "timedOut": false,
              "duration": 18072,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await lambdaParameters('Add media attachment to the task edit @T9f8ae49e', driverChrome);\n// time and site or lochalhost there tests are going\nconsole.log(Date().toLocaleLowerCase(), 'date', config.urlLoginPage);\nconst logginPageTest = new LoginPage(driverChrome, config.urlLoginPage);\nconst updateTaskDetail = new UpdateTaskDetail(driverChrome);\nconst goToTasks = new SearchingTaskByName(driverChrome);\nawait logginPageTest.userLogIn(\n  config.email,\n  config.password,\n  config.urlhomePageForCheck\n);\nawait goToTasks.goToTasksList(config.projectNameMain);\ntry {\n    await updateTaskDetail.findAllTasksInProject();\n    await updateTaskDetail.addAttachment(newTaskName, config.attachmentFileVideo);\n    await updateTaskDetail.checkAttachment(\n        newTaskName,\n        config.attachmentFileVideo\n    );\n  \n    await lambdaParameters('passed', driverChrome);\n} catch (error) {\n    await lambdaParameters('failed', driverChrome);\n    await makeScreenshot(driverChrome, 'task_attachment');\n    throw error;\n}",
              "err": {},
              "uuid": "d5d6ad79-b45a-40f9-bae3-5dc6a9abf072",
              "parentUUID": "c3d6a933-f8ed-499a-b67a-3a7602cf8f5d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add document attachment to the task @Ta8fb3301",
              "fullTitle": "Tasks tests @S26f6875e Add document attachment to the task @Ta8fb3301",
              "timedOut": false,
              "duration": 17722,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await lambdaParameters('Add document attachment to the task @Ta8fb3301', driverChrome);\n// time and site or lochalhost there tests are going\nconsole.log(Date().toLocaleLowerCase(), 'date', config.urlLoginPage);\nconst logginPageTest = new LoginPage(driverChrome, config.urlLoginPage);\nconst updateTaskDetail = new UpdateTaskDetail(driverChrome);\nconst goToTasks = new SearchingTaskByName(driverChrome);\nawait logginPageTest.userLogIn(\n  config.email,\n  config.password,\n  config.urlhomePageForCheck\n);\nawait goToTasks.goToTasksList(config.projectNameMain);\ntry {\n    await updateTaskDetail.findAllTasksInProject();\n    await updateTaskDetail.addAttachment(newTaskName, config.attachmentFileDoc);\n    await updateTaskDetail.checkAttachment(\n        newTaskName,\n        config.attachmentFileDoc\n    );\n  \n    await lambdaParameters('passed', driverChrome);\n} catch (error) {\n    await lambdaParameters('failed', driverChrome);\n    await makeScreenshot(driverChrome, 'task_attachment');\n    throw error;\n}",
              "err": {},
              "uuid": "dfa8007a-a047-48a9-92c0-2be8cc74ec7a",
              "parentUUID": "c3d6a933-f8ed-499a-b67a-3a7602cf8f5d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add other attachment to the task (.zip/.rar, .exe) @T1231ae22",
              "fullTitle": "Tasks tests @S26f6875e Add other attachment to the task (.zip/.rar, .exe) @T1231ae22",
              "timedOut": false,
              "duration": 17576,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await lambdaParameters('Add other attachment to the task (.zip/.rar, .exe) @T1231ae22', driverChrome);\n// time and site or lochalhost there tests are going\nconsole.log(Date().toLocaleLowerCase(), 'date', config.urlLoginPage);\nconst logginPageTest = new LoginPage(driverChrome, config.urlLoginPage);\nconst updateTaskDetail = new UpdateTaskDetail(driverChrome);\nconst goToTasks = new SearchingTaskByName(driverChrome);\nawait logginPageTest.userLogIn(\n  config.email,\n  config.password,\n  config.urlhomePageForCheck\n);\nawait goToTasks.goToTasksList(config.projectNameMain);\ntry {\n    await updateTaskDetail.findAllTasksInProject();\n    await updateTaskDetail.addAttachment(newTaskName, config.attachmentFileZip);\n    await updateTaskDetail.checkAttachment(\n        newTaskName,\n        config.attachmentFileZip\n    );\n  \n    await lambdaParameters('passed', driverChrome);\n} catch (error) {\n    await lambdaParameters('failed', driverChrome);\n    await makeScreenshot(driverChrome, 'task_attachment');\n    throw error;\n}",
              "err": {},
              "uuid": "701de2c4-5a95-4f43-ad16-b8a865666707",
              "parentUUID": "c3d6a933-f8ed-499a-b67a-3a7602cf8f5d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "remove task @T331e8497",
              "fullTitle": "Tasks tests @S26f6875e remove task @T331e8497",
              "timedOut": false,
              "duration": 11055,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await lambdaParameters('remove task', driverChrome);\n// time and site or lochalhost there tests are going\nconsole.log(Date().toLocaleLowerCase(), 'date', config.urlLoginPage);\nconst logginPageTest = new LoginPage(driverChrome, config.urlLoginPage);\nconst removeTask = new RemoveTask(driverChrome);\nawait logginPageTest.userLogIn(\n  config.email,\n  config.password,\n  config.urlhomePageForCheck\n);\ntry {\n  await removeTask.goToTasksList(config.projectNameMain);\n  await removeTask.taskRemove(newTaskName);\n  await lambdaParameters('passed', driverChrome);\n} catch (error) {\n  await makeScreenshot(driverChrome, 'task_remove');\n  await lambdaParameters('failed', driverChrome);\n  throw error;\n}",
              "err": {},
              "uuid": "33359e02-50fd-42ba-88c1-346174f75dfb",
              "parentUUID": "c3d6a933-f8ed-499a-b67a-3a7602cf8f5d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5ce974d0-1bae-4f57-aca5-e0421433b17a",
            "d5d6ad79-b45a-40f9-bae3-5dc6a9abf072",
            "dfa8007a-a047-48a9-92c0-2be8cc74ec7a",
            "701de2c4-5a95-4f43-ad16-b8a865666707",
            "33359e02-50fd-42ba-88c1-346174f75dfb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 80843,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.7.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "reports",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "colorjob",
        "reportFilename": "reports"
      },
      "version": "6.2.0"
    }
  }
}