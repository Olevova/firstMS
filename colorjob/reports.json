{
  "stats": {
    "suites": 1,
    "tests": 11,
    "passes": 11,
    "pending": 0,
    "failures": 0,
    "start": "2024-10-17T17:33:32.347Z",
    "end": "2024-10-17T17:37:25.415Z",
    "duration": 233068,
    "testsRegistered": 11,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "7c9f58f6-0db0-4c4a-a80a-7dc451106876",
      "title": "",
      "fullFile": "C:\\terenbro\\mailstone1\\test\\Roles tests\\CAWorkInView.test.js",
      "file": "\\test\\Roles tests\\CAWorkInView.test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ef977dcc-895a-42cb-a916-0cb8dc2f059f",
          "title": "Company admin role @Se7b2355c",
          "fullFile": "C:\\terenbro\\mailstone1\\test\\Roles tests\\CAWorkInView.test.js",
          "file": "\\test\\Roles tests\\CAWorkInView.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Company admin role @Se7b2355c\"",
              "fullTitle": "Company admin role @Se7b2355c \"before each\" hook in \"Company admin role @Se7b2355c\"",
              "timedOut": false,
              "duration": 2184,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driverChrome = await createWebdriverChrome();",
              "err": {},
              "uuid": "8c4170f2-ffce-4549-ae7f-ee1ae1721159",
              "parentUUID": "ef977dcc-895a-42cb-a916-0cb8dc2f059f",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Company admin role @Se7b2355c\"",
              "fullTitle": "Company admin role @Se7b2355c \"after each\" hook in \"Company admin role @Se7b2355c\"",
              "timedOut": false,
              "duration": 231,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (driverChrome) {\n  await driverChrome.quit();\n}",
              "err": {},
              "uuid": "5fa09533-58ac-42ec-b544-4a86691f13c6",
              "parentUUID": "ef977dcc-895a-42cb-a916-0cb8dc2f059f",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "CA can add/duplicate floors @T30d6a7c9",
              "fullTitle": "Company admin role @Se7b2355c CA can add/duplicate floors @T30d6a7c9",
              "timedOut": false,
              "duration": 18096,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await lambdaParameters('CA can add/duplicate floors', driverChrome);\n// time and site or lochalhost there tests are going\nconsole.log(Date().toLocaleLowerCase(), 'date', config.urlLoginPage);\nconst logginPageTest = new LoginPage(driverChrome, config.urlLoginPage);\nconst createFloor = new CreateFloor(driverChrome);\nconst duplicateFloorInProject = new DuplicateFloor(driverChrome);\nawait logginPageTest.userLogIn(\n  config.emailCA,\n  config.passwordCA,\n  config.mainCompanyPage\n);\ntry {\n  await createFloor.goToView(config.projectNameForCA, 'ca');\n  await createFloor.createFloor(config.newFloorName);\n  await createFloor.checkFloorCreation(config.newFloorName);\n  duplicateFloorName = await duplicateFloorInProject.duplicateFloor();  \n  await lambdaParameters('passed', driverChrome);\n} catch (error) {\n  await makeScreenshot(driverChrome, 'floor_create_duplicate_by_CA');\n  await lambdaParameters('failed', driverChrome);\n  throw error;\n}",
              "err": {},
              "uuid": "fba5ce1f-9909-47dc-af9b-692b44abc437",
              "parentUUID": "ef977dcc-895a-42cb-a916-0cb8dc2f059f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "CA can rearrange floors @T64f23cbb",
              "fullTitle": "Company admin role @Se7b2355c CA can rearrange floors @T64f23cbb",
              "timedOut": false,
              "duration": 14556,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await lambdaParameters('CA can rearrange floors', driverChrome);\n// time and site or lochalhost there tests are going\nconsole.log(Date().toLocaleLowerCase(), 'date', config.urlLoginPage);\nconst logginPageTest = new LoginPage(driverChrome, config.urlLoginPage);\nconst changeFloor = new SequenceFloorChange(driverChrome);\nawait logginPageTest.userLogIn(\n  config.emailCA,\n  config.passwordCA,\n  config.mainCompanyPage\n);\ntry {\n  await changeFloor.goToView(config.projectNameForCA, 'ca');\n  await changeFloor.sequenceChange();\n  await changeFloor.checkSequence();\n  await lambdaParameters('passed', driverChrome);\n} catch (error) {\n  await makeScreenshot(driverChrome, 'floor_change_sequence_by_CA');\n  throw error;\n}",
              "err": {},
              "uuid": "d246391f-b5cc-4e18-88c7-13a44a05ae90",
              "parentUUID": "ef977dcc-895a-42cb-a916-0cb8dc2f059f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "CA can add/duplicate units @Te00e3377",
              "fullTitle": "Company admin role @Se7b2355c CA can add/duplicate units @Te00e3377",
              "timedOut": false,
              "duration": 17546,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await lambdaParameters('CA can add/duplicate units', driverChrome);\n// time and site or lochalhost there tests are going\nconsole.log(Date().toLocaleLowerCase(), 'date', config.urlLoginPage);\nconst logginPageTest = new LoginPage(driverChrome, config.urlLoginPage);\nconst createUnit = new CreateUnit(driverChrome);\nconst duplicateUnit = new DuplicateUnit(driverChrome);\nawait logginPageTest.userLogIn(\n  config.emailCA,\n  config.passwordCA,\n  config.mainCompanyPage\n);\ntry {\n  await createUnit.goToView(config.projectNameForCA, 'ca');\n  await createUnit.createUnit(config.newUnitName);\n  await createUnit.checkCreateUnit(config.newUnitName);\n  await duplicateUnit.duplicateUnit();\n  await lambdaParameters('passed', driverChrome);\n} catch (error) {\n  await makeScreenshot(driverChrome, 'unit_create_duplicate_by_CA');\n  await lambdaParameters('failed', driverChrome);\n  throw error;\n}",
              "err": {},
              "uuid": "4d598a4c-6abe-49d4-a10c-5ba316c59a2d",
              "parentUUID": "ef977dcc-895a-42cb-a916-0cb8dc2f059f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete floor by CA",
              "fullTitle": "Company admin role @Se7b2355c Delete floor by CA",
              "timedOut": false,
              "duration": 19979,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await lambdaParameters(\n  'Delete floor by CA',\n  driverChrome\n);\n// time and site or lochalhost there tests are going\nconsole.log(Date().toLocaleLowerCase(), 'date', config.urlLoginPage);\nconst logginPageTest = new LoginPage(driverChrome, config.urlLoginPage);\nconst deleteFloor = new DeleteFloor(driverChrome);\nawait logginPageTest.userLogIn(\n  config.emailCA,\n  config.passwordCA,\n  config.mainCompanyPage\n);\ntry {\n  await deleteFloor.goToView(config.projectNameForCA, 'ca');\n  await deleteFloor.deleteFloor(config.newFloorName);\n  await deleteFloor.checkDeleteFloor(config.newFloorName);\n  await deleteFloor.deleteFloor(duplicateFloorName);\n  await deleteFloor.checkDeleteFloor(duplicateFloorName);\n  await lambdaParameters('passed', driverChrome);\n} catch (error) {\n  await makeScreenshot(driverChrome, 'floor_delete_by_CA');\n  await lambdaParameters('failed', driverChrome);\n  throw error;\n}",
              "err": {},
              "uuid": "c4d847f8-8b32-4a54-9c91-451ce0fc4309",
              "parentUUID": "ef977dcc-895a-42cb-a916-0cb8dc2f059f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "CA can add unique rooms @T41e327d3",
              "fullTitle": "Company admin role @Se7b2355c CA can add unique rooms @T41e327d3",
              "timedOut": false,
              "duration": 26904,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await lambdaParameters('create new Room(unique)', driverChrome);\n// time and site or lochalhost there tests are going\nconsole.log(Date().toLocaleLowerCase(), 'date', config.urlLoginPage);\nconst logginPageTest = new LoginPage(driverChrome, config.urlLoginPage);\nconst createRoom = new CreateRoom(driverChrome);\nconst createArea = new CreateArea(driverChrome);\nawait logginPageTest.userLogIn(\n  config.emailCA,\n  config.passwordCA,\n  config.mainCompanyPage\n);\ntry {\n  await createRoom.goToView(config.projectNameForCA, 'ca');\n  await createRoom.createRoom('_', config.newRoomName);\n  await createRoom.checkCreateNewRoom(config.newRoomName);\n  await createArea.openEditRoomFormViaThreeDots(config.newRoomName);\n  await createArea.addAreaInRoomWithoutCreatingTemplate(config.newAreaName);\n  await createArea.checkCreateArea(config.newRoomName, config.newAreaName);\n  await createArea.openEditRoomFormViaThreeDots(config.newRoomName);\n  await createRoom.addSubtitleToTheRoom(config.newSubtitle);\n  await createRoom.notificationCheck();\n  await lambdaParameters('passed', driverChrome);\n} catch (error) {\n  await makeScreenshot(driverChrome, 'unique_room_create_by_CA');\n  await lambdaParameters('failed', driverChrome);\n  throw error;\n}",
              "err": {},
              "uuid": "3087312e-14e0-4c03-8688-5da3ca425114",
              "parentUUID": "ef977dcc-895a-42cb-a916-0cb8dc2f059f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "CA can can edit unqie rooms @T3cc7507f",
              "fullTitle": "Company admin role @Se7b2355c CA can can edit unqie rooms @T3cc7507f",
              "timedOut": false,
              "duration": 16979,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await lambdaParameters('CA can can edit unqie rooms', driverChrome);\n// time and site or lochalhost there tests are going\nconsole.log(Date().toLocaleLowerCase(), 'date', config.urlLoginPage);\nconst logginPageTest = new LoginPage(driverChrome, config.urlLoginPage);\nconst createRoom = new CreateRoom(driverChrome);\nconst createArea = new CreateArea(driverChrome);\nawait logginPageTest.userLogIn(\n  config.emailCA,\n  config.passwordCA,\n  config.mainCompanyPage\n);\ntry {\n  await createRoom.goToView(config.projectNameForCA, 'ca');\n  await createRoom.openEditRoomFormViaThreeDots(config.newRoomName+' '+config.newSubtitle);\n  await createRoom.changeRoomTitle(config.editRoom);\n  await createArea.addAreaInRoomWithoutCreatingTemplate(config.editArea);\n  await createArea.checkCreateArea(config.editRoom+' '+config.newSubtitle,config.newAreaName+config.editArea);\n  await lambdaParameters('passed', driverChrome);\n} catch (error) {\n  await makeScreenshot(driverChrome, 'unique_room_edit_by_CA');\n  await lambdaParameters('failed', driverChrome);\n  throw error;\n}",
              "err": {},
              "uuid": "f2fc5346-e4a7-4a84-9509-c86cf875e28d",
              "parentUUID": "ef977dcc-895a-42cb-a916-0cb8dc2f059f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "delete new room (unique) @T48f0e2da",
              "fullTitle": "Company admin role @Se7b2355c delete new room (unique) @T48f0e2da",
              "timedOut": false,
              "duration": 12821,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await lambdaParameters('delete new room (unique)', driverChrome);\n// time and site or lochalhost there tests are going\nconsole.log(Date().toLocaleLowerCase(), 'date', config.urlLoginPage);\nconst logginPageTest = new LoginPage(driverChrome, config.urlLoginPage);\nconst deleteRoom = new DeleteRoom(driverChrome);\nawait logginPageTest.userLogIn(\n  config.emailCA,\n  config.passwordCA,\n  config.mainCompanyPage\n);\ntry {\n  await deleteRoom.goToView(config.projectNameForCA, 'ca');\n  await deleteRoom.deleteRoom(config.editRoom+' '+config.newSubtitle);\n  await deleteRoom.checkDeleteFloor(config.editRoom+' '+config.newSubtitle);\n  await lambdaParameters('passed', driverChrome);\n} catch (error) {\n  await makeScreenshot(driverChrome, 'room_delete_by_CA');\n  await lambdaParameters('failed', driverChrome);\n  throw error;\n}",
              "err": {},
              "uuid": "bd99dce9-9ee5-46a9-ae2c-ec753d2cb710",
              "parentUUID": "ef977dcc-895a-42cb-a916-0cb8dc2f059f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "CA can create templates (save as template) @T68e3da72",
              "fullTitle": "Company admin role @Se7b2355c CA can create templates (save as template) @T68e3da72",
              "timedOut": false,
              "duration": 19160,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await lambdaParameters('CA can create templates (save as template)', driverChrome);\n// time and site or lochalhost there tests are going\nconsole.log(Date().toLocaleLowerCase(), 'date', config.urlLoginPage);\nconst logginPageTest = new LoginPage(driverChrome, config.urlLoginPage);\nconst createRoom = new CreateRoom(driverChrome);\nawait logginPageTest.userLogIn(\n  config.emailCA,\n  config.passwordCA,\n  config.mainCompanyPage\n);\ntry {\n  await createRoom.goToView(config.projectNameForCA, 'ca');\n  await createRoom.createTemplateRoomWithAreas('_',config.template, false,1);\n  await createRoom.checkCreateNewRoom(config.template);\n  await lambdaParameters('passed', driverChrome);\n} catch (error) {\n  await makeScreenshot(driverChrome, 'template_create_by_CA');\n  await lambdaParameters('failed', driverChrome);\n  throw error;\n}",
              "err": {},
              "uuid": "d0d52c45-a2cb-4a59-9725-45a55f44bcca",
              "parentUUID": "ef977dcc-895a-42cb-a916-0cb8dc2f059f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "CA can create room from templates @T5728761c",
              "fullTitle": "Company admin role @Se7b2355c CA can create room from templates @T5728761c",
              "timedOut": false,
              "duration": 16624,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await lambdaParameters('CA can create room from templates', driverChrome);\n// time and site or lochalhost there tests are going\nconsole.log(Date().toLocaleLowerCase(), 'date', config.urlLoginPage);\nconst logginPageTest = new LoginPage(driverChrome, config.urlLoginPage);\nconst createRoom = new CreateRoom(driverChrome);\nawait logginPageTest.userLogIn(\n  config.emailCA,\n  config.passwordCA,\n  config.mainCompanyPage\n);\ntry {\n  await createRoom.goToView(config.projectNameForCA, 'ca');\n  await createRoom.createRoomViaTemplate(\n    '_',\n    config.template,\n    config.roomBasedOnTemplate\n  );\n  await createRoom.checkCreateNewRoom(config.roomBasedOnTemplate);\n  await lambdaParameters('passed', driverChrome);\n} catch (error) {\n  await makeScreenshot(driverChrome, 'create_room_via_template_by_CA');\n  await lambdaParameters('failed', driverChrome);\n  throw error;\n}",
              "err": {},
              "uuid": "16af3ce7-c076-40af-9e09-5331ddf0b8cd",
              "parentUUID": "ef977dcc-895a-42cb-a916-0cb8dc2f059f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "CA can detach template @T0c0b529b",
              "fullTitle": "Company admin role @Se7b2355c CA can detach template @T0c0b529b",
              "timedOut": false,
              "duration": 16461,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await lambdaParameters('CA can detach template', driverChrome);\n// time and site or lochalhost there tests are going\nconsole.log(Date().toLocaleLowerCase(), 'date', config.urlLoginPage);\nconst logginPageTest = new LoginPage(driverChrome, config.urlLoginPage);\nconst createRoom = new CreateRoom(driverChrome);\nawait logginPageTest.userLogIn(\n  config.emailCA,\n  config.passwordCA,\n  config.mainCompanyPage\n);\ntry {\n  await createRoom.goToView(config.projectNameForCA, 'ca');\n  await createRoom.createUniqueRoomViaTemplate(\n    '_',\n    config.template,\n    config.detuchRoom\n  );\n  await createRoom.checkCreateNewRoom(config.detuchRoom);\n  await lambdaParameters('passed', driverChrome);\n} catch (error) {\n  await makeScreenshot(driverChrome, 'create_room_via_template_by_CA');\n  await lambdaParameters('failed', driverChrome);\n  throw error;\n}",
              "err": {},
              "uuid": "cb4cefee-8f0f-4223-bbe7-acc73d2a85e3",
              "parentUUID": "ef977dcc-895a-42cb-a916-0cb8dc2f059f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "delete template, template room via template, unique room via template",
              "fullTitle": "Company admin role @Se7b2355c delete template, template room via template, unique room via template",
              "timedOut": false,
              "duration": 24177,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await lambdaParameters('delete template room via template', driverChrome);\n// time and site or lochalhost there tests are going\nconsole.log(Date().toLocaleLowerCase(), 'date', config.urlLoginPage);\nconst logginPageTest = new LoginPage(driverChrome, config.urlLoginPage);\nconst deleteRoom = new DeleteRoom(driverChrome);\nconst roomTemplate = new RoomTemplate(driverChrome);\nawait logginPageTest.userLogIn(\n  config.emailCA,\n  config.passwordCA,\n  config.mainCompanyPage\n);\ntry {\n  await deleteRoom.goToView(config.projectNameForCA, 'ca');\n  await deleteRoom.deleteRoom(config.detuchRoom);\n  await deleteRoom.checkDeleteFloor(config.detuchRoom);\n  await deleteRoom.deleteRoom(config.roomBasedOnTemplate);\n  await deleteRoom.checkDeleteFloor(config.roomBasedOnTemplate);\n  await roomTemplate.deleteTemplate('_', config.template);\n  await roomTemplate.checkDeleteTemplate('_', config.template);\n  await lambdaParameters('passed', driverChrome);\n  await driverChrome.sleep(1000);\n} catch (error) {\n  await makeScreenshot(driverChrome, 'edit_room_via_template');\n  await lambdaParameters('failed', driverChrome);\n  throw error;\n}",
              "err": {},
              "uuid": "04dfe6bd-4d5c-430a-810a-58702732339c",
              "parentUUID": "ef977dcc-895a-42cb-a916-0cb8dc2f059f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fba5ce1f-9909-47dc-af9b-692b44abc437",
            "d246391f-b5cc-4e18-88c7-13a44a05ae90",
            "4d598a4c-6abe-49d4-a10c-5ba316c59a2d",
            "c4d847f8-8b32-4a54-9c91-451ce0fc4309",
            "3087312e-14e0-4c03-8688-5da3ca425114",
            "f2fc5346-e4a7-4a84-9509-c86cf875e28d",
            "bd99dce9-9ee5-46a9-ae2c-ec753d2cb710",
            "d0d52c45-a2cb-4a59-9725-45a55f44bcca",
            "16af3ce7-c076-40af-9e09-5331ddf0b8cd",
            "cb4cefee-8f0f-4223-bbe7-acc73d2a85e3",
            "04dfe6bd-4d5c-430a-810a-58702732339c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 203303,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.7.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "reports",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "colorjob",
        "reportFilename": "reports"
      },
      "version": "6.2.0"
    }
  }
}